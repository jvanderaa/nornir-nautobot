---
# Add additional stages in the order of execution here, and then under the job:include: key
stages:
  - name: "lint"
  - name: "pylint"
  - name: "test"
  - name: "deploy-github"
    if: "tag IS present"
  - name: "deploy-pypi"
    if: "tag IS present"

language: "python"
services:
  - "docker"

env:
  matrix:
    - "PYTHON_VER=3.6"
    - "PYTHON_VER=3.7"
    - "PYTHON_VER=3.8"
    - "PYTHON_VER=3.9"
before_script:
  - "pip install invoke poetry toml"
  - "invoke build --nocache"
script:
  - "invoke pytest"

jobs:
  include:
    - stage: "lint"
      env:
        - "INVOKE_LOCAL=True"
      before_script:
        - "pip install invoke toml black bandit pydocstyle flake8 yamllint pylint"
      script:
        - "invoke black"
        - "invoke bandit"
        - "invoke pydocstyle"
        - "invoke flake8"
        - "invoke yamllint"

    - stage: "pylint"
      before_script:
        - "pip install invoke poetry toml"
        - "invoke build --nocache"
      script:
        - "invoke pylint"

    - stage: "integration"
      before_script:
        - "pip install --upgrade pip wheel"
        - "pip install invoke poetry toml"
        - "poetry config virtualenvs.create false"
        - "poetry config installer.parallel false"
        - "poetry install"
      script:
        - "invoke integration-tests"
      env:
        matrix:
          - "NAUTOBOT_VER=1.0.1"
          - "NAUTOBOT_VER=1.0.2"
          - "NAUTOBOT_VER=1.0.3"
          - "NAUTOBOT_VER=1.1.0-beta.2"
          - "NAUTOBOT_VER=latest"

    - stage: "deploy-github"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "releases"
        api_key: "$GITHUB_AUTH_TOKEN"
        file_glob: true
        file: "dist/*"
        skip_cleanup: true
        on:
          all_branches: true

    - stage: "deploy-pypi"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry config pypi-token.pypi $PYPI_TOKEN"
        - "poetry publish --build"
